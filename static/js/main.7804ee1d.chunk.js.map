{"version":3,"sources":["reportWebVitals.js","index.js","App.js","componenets/CalculatorDisplay.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","operatators","props","handleUpdate","e","beepAudio","currentTime","play","mathExpression","state","includes","target","value","setState","handleExceptions","currentOperator","undefined","replaceOperators","split","pop","replaceWith","newExpression","replace","evaluateExpression","currAnswer","eval","clearDisplay","className","id","this","src","ref","audio","React","Component","CalculatorDisplay","onClick"],"mappings":"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","file":"static/js/main.7804ee1d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\nimport CalculatorDisplay from './componenets/CalculatorDisplay';\nimport './App.css';\n\nconst operatators = [\"%\", \"/\", \"*\", \"-\", \"+\"];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentOperator: \"\",\n      mathExpression: \"0\",\n    };\n  }\n  handleUpdate = (e) => {\n    this.beepAudio.currentTime = 0;\n    this.beepAudio.play();\n    let { mathExpression } = this.state;\n    if (mathExpression === \"0\" && !operatators.includes(e.target.value)) {\n      this.setState({ mathExpression: e.target.value });\n    } else {\n      if (e.target.value !== \".\" && !operatators.includes(e.target.value)) {\n        this.setState({ mathExpression: (mathExpression += e.target.value) });\n      }\n      this.handleExceptions(e);\n    }\n  };\n\n  handleExceptions = (e) => {\n    let { currentOperator, mathExpression } = this.state;\n    if (operatators.includes(e.target.value)) {\n      this.setState({\n        currentOperator: (currentOperator += e.target.value),\n        mathExpression: (mathExpression += e.target.value),\n      });\n      if (currentOperator[1] !== \"-\" && currentOperator[1] !== undefined) {\n        this.replaceOperators(e.target.value);\n      } else if (\n        currentOperator[1] === \"-\" &&\n        currentOperator[1] !== undefined\n      ) {\n        if (currentOperator[2] !== \"-\" && currentOperator[2] !== undefined) {\n          this.replaceOperators(e.target.value);\n        } else if (\n          currentOperator[2] === \"-\" &&\n          currentOperator[2] !== undefined\n        ) {\n          this.replaceOperators(e.target.value);\n        }\n      }\n      if (currentOperator === \"--\") {\n        this.replaceOperators(e.target.value);\n      }\n    } else {\n      this.setState({ currentOperator: \"\" });\n    }\n\n    if (e.target.value === \".\") {\n      let splitted = mathExpression.split(/[\\+\\-\\*\\/\\%]/);\n      let currElem = splitted.pop();\n      if (!currElem.includes(\".\")) {\n        this.setState({ mathExpression: (mathExpression += e.target.value) });\n      }\n    }\n  };\n\n  replaceOperators = (replaceWith) => {\n    let { currentOperator, mathExpression } = this.state;\n    let newExpression = mathExpression.replace(currentOperator, replaceWith);\n    this.setState({\n      currentOperator: replaceWith,\n      mathExpression: newExpression,\n    });\n  };\n\n  evaluateExpression = () => {\n    let { mathExpression } = this.state;\n    let currAnswer = eval(mathExpression);\n    this.setState({ mathExpression: currAnswer });\n  };\n\n  clearDisplay = () => {\n    this.setState({ mathExpression: \"0\", currentOperator: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"react-calculator\">\n        <div className=\"calculator-inner\">\n          <div className=\"display-wrap\">\n            <div id=\"display\">{this.state.mathExpression}</div>\n          </div>\n          <CalculatorDisplay\n            handleUpdate={this.handleUpdate}\n            evaluateExpression={this.evaluateExpression}\n            clearDisplay={this.clearDisplay}/>\n          <audio\n            id=\"beep\"\n            src=\"https://actions.google.com/sounds/v1/alarms/beep_short.ogg\"\n            ref={(audio) => {\n              this.beepAudio = audio;\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nclass CalculatorDisplay extends React.Component {\r\n    render() {\r\n        return (\r\n        <div id=\"calc-buttons\">\r\n            <div className=\"left-wrap\">\r\n            <button\r\n                className=\"number-btn\"\r\n                id=\"seven\"\r\n                onClick={this.props.handleUpdate}\r\n                value=\"7\">7\r\n            </button>\r\n            <button\r\n                className=\"number-btn\"\r\n                id=\"eight\"\r\n                onClick={this.props.handleUpdate}\r\n                value=\"8\">8\r\n            </button>\r\n            <button\r\n                className=\"number-btn\"\r\n                id=\"nine\"\r\n                onClick={this.props.handleUpdate}\r\n                value=\"9\">9\r\n            </button>\r\n            <button\r\n                className=\"number-btn\"\r\n                id=\"four\"\r\n                onClick={this.props.handleUpdate}\r\n                value=\"4\">4\r\n            </button>\r\n            <button\r\n                className=\"number-btn\"\r\n                id=\"five\"\r\n                onClick={this.props.handleUpdate}\r\n                value=\"5\">5\r\n            </button>\r\n            <button\r\n                className=\"number-btn\"\r\n                id=\"six\"\r\n                onClick={this.props.handleUpdate}\r\n                value=\"6\">6\r\n            </button>\r\n            <button\r\n                className=\"number-btn\"\r\n                id=\"one\"\r\n                onClick={this.props.handleUpdate}\r\n                value=\"1\">1\r\n            </button>\r\n            <button\r\n                className=\"number-btn\"\r\n                id=\"two\"\r\n                onClick={this.props.handleUpdate}\r\n                value=\"2\">2\r\n            </button>\r\n            <button\r\n                className=\"number-btn\"\r\n                id=\"three\"\r\n                onClick={this.props.handleUpdate}\r\n                value=\"3\">3\r\n            </button>\r\n            <button\r\n                className=\"number-btn\"\r\n                id=\"zero\"\r\n                onClick={this.props.handleUpdate}\r\n                value=\"0\">0\r\n            </button>\r\n            <button\r\n                className=\"number-btn decimal-btn\"\r\n                id=\"decimal\"\r\n                onClick={this.props.handleUpdate}\r\n                value=\".\">.\r\n            </button>\r\n            <button\r\n                className=\"number-btn clear-btn\"\r\n                id=\"clear\"\r\n                onClick={this.props.clearDisplay}\r\n                value=\"AC\">C\r\n            </button>\r\n            </div>\r\n\r\n            <div className=\"right-wrap\">\r\n            <div className=\"right-top-row\">\r\n                <button\r\n                className=\"operator-btn\"\r\n                id=\"subtract\"\r\n                onClick={this.props.handleUpdate}\r\n                value=\"-\">-\r\n                </button>\r\n                <button\r\n                className=\"operator-btn\"\r\n                id=\"divide\"\r\n                onClick={this.props.handleUpdate}\r\n                value=\"/\">&#247;\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"right-middle-row\">\r\n                <div className=\"middle-left-wrap\">\r\n                <button\r\n                    className=\"operator-btn\"\r\n                    id=\"add\"\r\n                    onClick={this.props.handleUpdate}\r\n                    value=\"+\">+\r\n                </button>\r\n                </div>\r\n\r\n                <div className=\"middle-right-wrap\">\r\n                <button\r\n                    className=\"operator-btn\"\r\n                    id=\"multiply\"\r\n                    onClick={this.props.handleUpdate}\r\n                    value=\"*\">X\r\n                </button>\r\n                <button\r\n                    className=\"operator-btn\"\r\n                    id=\"modulus\"\r\n                    onClick={this.props.handleUpdate}\r\n                    value=\"%\">%\r\n                </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-bottom-row\">\r\n                <button\r\n                className=\"equal-btn\"\r\n                id=\"equals\"\r\n                onClick={this.props.evaluateExpression}\r\n                value=\"=\">=\r\n                </button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalculatorDisplay;"],"sourceRoot":""}